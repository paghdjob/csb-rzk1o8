{"version":3,"sources":["component/forms/inputBox.js","component/forms/buttonBox.js","component/forms/checkBox.js","component/forms/textareaBox.js","component/forms/dateBox.js","component/forms/fileBox.js","component/forms/dynamicForm.js","page/profileFormData.js","page/profile.js"],"names":["InputBox","props","multiForms","useSelector","state","multiForm","formName","dispatch","useDispatch","_props$info","info","label","type","fieldname","parentClass","classNames","id","placeholder","defaultValue","min","max","minLength","maxLength","Pattern","readonly","required","react_default","a","createElement","Fragment","className","name","pattern","onChange","e","incrementByAmounts","field","value","target","disabled","ButtonBox","console","log","onClick","preventDefault","CheckBox","list","handle","fruits","checked","concat","Object","toConsumableArray","filter","d","isFlag","data","indexOf","map","index","key","TextareaBox","rows","DateBox","FileBox","DynamicForm","components","multiFormData","item","title","subtitile","noValidate","fields","items","Component","action","method","text","Profile","dynamicForm"],"mappings":"6HAKMA,EAAW,SAACC,GAChB,IAAMC,EAAaC,YACjB,SAACC,GAAD,OAAWA,EAAMC,UAAUA,UAAUJ,EAAMK,YAGvCC,EAAWC,cALSC,EAwBtBR,EAAMS,KAfRC,EATwBF,EASxBE,MACAC,EAVwBH,EAUxBG,KACAC,EAXwBJ,EAWxBI,UACAC,EAZwBL,EAYxBK,YACAC,EAbwBN,EAaxBM,WACAC,EAdwBP,EAcxBO,GACAC,EAfwBR,EAexBQ,YACAC,EAhBwBT,EAgBxBS,aACAC,EAjBwBV,EAiBxBU,IACAC,EAlBwBX,EAkBxBW,IACAC,EAnBwBZ,EAmBxBY,UACAC,EApBwBb,EAoBxBa,UACAC,EArBwBd,EAqBxBc,QACAC,EAtBwBf,EAsBxBe,SACAC,EAvBwBhB,EAuBxBgB,SAGEvB,GAAcA,EAAWW,KAC3BK,EAAehB,EAAWW,IAgB5B,OACEa,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAWhB,GACdY,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAcnB,GAC/Be,EAAAC,EAAAC,cAAA,SACEE,UAAWf,EACXH,KAAMA,EACNI,GAAIA,EACJe,KAAMlB,EACNI,YAAaA,EAEbE,IAAKA,EACLC,IAAKA,EACLC,UAAWA,EACXC,UAAWA,EACXU,QAAST,EACTU,SA5BO,SAACC,GAGd3B,EACE4B,YAAmB,CACjB7B,SAAUL,EAAMK,SAChB8B,MAAOvB,EACPwB,MAAOH,EAAEI,OAAOD,UAsBdZ,SAAUA,EACVc,SAAUf,EACVa,MAAOnB,IAETQ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uCAAf,kBC/DFU,EAAY,SAACvC,GACjB,IAAMC,EAAaC,YACjB,SAACC,GAAD,OAAWA,EAAMC,UAAUA,UAAUJ,EAAMK,YAE7CmC,QAAQC,IAAI,uBAAqBxC,GACjC,IAAMK,EAAWC,cALUC,EAcvBR,EAAMS,KAPRE,EAPyBH,EAOzBG,KACAC,EARyBJ,EAQzBI,UACAC,EATyBL,EASzBK,YACAC,EAVyBN,EAUzBM,WACAC,EAXyBP,EAWzBO,GACAE,EAZyBT,EAYzBS,aACAM,EAbyBf,EAazBe,SAEEtB,GAAcA,EAAWW,IAE3B4B,QAAQC,IAAI,gCAA8BxC,EAAWW,IAevD,OACEa,EAAAC,EAAAC,cAAA,OAAKE,UAAWhB,GACdY,EAAAC,EAAAC,cAAA,SACEhB,KAAMA,EACNkB,UAAWf,EACXC,GAAIA,EACJe,KAAMlB,EACNwB,MAAOnB,EACPqB,SAAUf,EACVmB,QAtBS,SAACT,GACdO,QAAQC,IAAI,yBAAuB7B,EAAWqB,EAAEI,OAAOD,OACvDH,EAAEU,iBACFrC,EACE4B,YAAmB,CACjB7B,SAAUL,EAAMK,SAChB8B,MAAOvB,EACPwB,MAAOH,EAAEI,OAAOD,sBC3BlBQ,EAAW,SAAC5C,GAChB,IAAMC,EAAaC,YACjB,SAACC,GAAD,OAAWA,EAAMC,UAAUA,UAAUJ,EAAMK,YAEvCC,EAAWC,cAJSC,EAetBR,EAAMS,KARRE,EAPwBH,EAOxBG,KACAC,EARwBJ,EAQxBI,UACAC,EATwBL,EASxBK,YACAC,EAVwBN,EAUxBM,WACAC,EAXwBP,EAWxBO,GACAQ,EAZwBf,EAYxBe,SACAsB,EAbwBrC,EAaxBqC,KACA5B,EAdwBT,EAcxBS,aAEEhB,GAAcA,EAAWW,KAC3BK,EAAehB,EAAWW,IAI5B,IAAMkC,EAAS,SAACb,GACd,GAAa,aAATtB,EAAqB,CACvB,IAAIoC,EACF9C,GAAcA,EAAWW,GAAaX,EAAWW,GAAa,GAE9DmC,EADEd,EAAEI,OAAOW,QACL,GAAAC,OAAAC,OAAAC,EAAA,EAAAD,CAAOH,GAAW,CAACd,EAAEI,OAAOD,QAEzBW,EAAOK,OAAO,SAACC,GAAD,OAAOA,IAAMpB,EAAEI,OAAOD,QAG/C9B,EACE4B,YAAmB,CACjB7B,SAAUL,EAAMK,SAChB8B,MAAOvB,EACPwB,MAAOW,UAIXzC,EACE4B,YAAmB,CACjB7B,SAAUL,EAAMK,SAChB8B,MAAOvB,EACPwB,MAAOH,EAAEI,OAAOD,UAKlBkB,EAAS,SAACC,EAAM5C,EAAMM,GAE1B,MAAa,aAATN,EACKM,EAAauC,QAAQD,IAAS,EAE9BA,IAAStC,GAIpB,OACEQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAWhB,GACbgC,EAAKY,IAAI,SAACF,EAAMG,GACf,OACEjC,EAAAC,EAAAC,cAAA,OAAKgC,IAAKD,EAAO7B,UAAU,gCACzBJ,EAAAC,EAAAC,cAAA,SACEE,UAAWf,EACXH,KAAMA,EACNI,GAAIA,EACJe,KAAMlB,EACNoB,SAAUc,EACVR,SAAUf,EACVa,MAAOmB,EACPP,QAASM,EAAOC,EAAM5C,EAAMM,KAE9BQ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,oBAAoB0B,SCzE7CK,EAAc,SAAC5D,GACnB,IAAMC,EAAaC,YACjB,SAACC,GAAD,OAAWA,EAAMC,UAAUA,UAAUJ,EAAMK,YAEvCqB,EAAIxB,YACR,SAACC,GAAD,OAAWA,EAAMC,YAEnBoC,QAAQC,IAAI,cAAYf,GACxB,IAAMpB,EAAWC,cARYC,EA2BzBR,EAAMS,KAfRC,EAZ2BF,EAY3BE,MACAE,EAb2BJ,EAa3BI,UACAC,EAd2BL,EAc3BK,YACAC,EAf2BN,EAe3BM,WACAC,EAhB2BP,EAgB3BO,GACAC,EAjB2BR,EAiB3BQ,YACAC,EAlB2BT,EAkB3BS,aACAC,EAnB2BV,EAmB3BU,IACAC,EApB2BX,EAoB3BW,IACA0C,EArB2BrD,EAqB3BqD,KACAzC,EAtB2BZ,EAsB3BY,UACAC,EAvB2Bb,EAuB3Ba,UACAC,EAxB2Bd,EAwB3Bc,QACAC,EAzB2Bf,EAyB3Be,SACAC,EA1B2BhB,EA0B3BgB,SAGEvB,GAAcA,EAAWW,KAC3BK,EAAehB,EAAWW,IAgB5B,OACEa,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAWhB,GACdY,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAcnB,GAC/Be,EAAAC,EAAAC,cAAA,YACEkC,KAAMA,EACNhC,UAAWf,EACXH,KAAK,OACLI,GAAIA,EACJe,KAAMlB,EACNI,YAAaA,EAEbE,IAAKA,EACLC,IAAKA,EACLC,UAAWA,EACXC,UAAWA,EACXU,QAAST,EACTU,SA7BO,SAACC,GAGd3B,EACE4B,YAAmB,CACjB7B,SAAUL,EAAMK,SAChB8B,MAAOvB,EACPwB,MAAOH,EAAEI,OAAOD,UAuBdZ,SAAUA,EACVc,SAAUf,EACVa,MAAOnB,IAETQ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uCAAf,kBCpEFiC,EAAU,SAAC9D,GACf,IAAMC,EAAaC,YACjB,SAACC,GAAD,OAAWA,EAAMC,UAAUA,UAAUJ,EAAMK,YAE7CmC,QAAQC,IAAI,uBAAqBxC,GACjC,IAAMK,EAAWC,cALQC,EAuBrBR,EAAMS,KAfRC,EARuBF,EAQvBE,MACAC,EATuBH,EASvBG,KACAC,EAVuBJ,EAUvBI,UACAC,EAXuBL,EAWvBK,YACAC,EAZuBN,EAYvBM,WACAC,EAbuBP,EAavBO,GACAC,EAduBR,EAcvBQ,YACAC,EAfuBT,EAevBS,aACAC,EAhBuBV,EAgBvBU,IACAC,EAjBuBX,EAiBvBW,IACAC,EAlBuBZ,EAkBvBY,UACAC,EAnBuBb,EAmBvBa,UACAC,EApBuBd,EAoBvBc,QACAC,EArBuBf,EAqBvBe,SACAC,EAtBuBhB,EAsBvBgB,SAGEvB,GAAcA,EAAWW,KAC3BK,EAAehB,EAAWW,IAc5B,OACEa,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAWhB,GACdY,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAcnB,GAC/Be,EAAAC,EAAAC,cAAA,SACEE,UAAWf,EACXH,KAAMA,EACNI,GAAIA,EACJe,KAAMlB,EACNI,YAAaA,EAEbE,IAAKA,EACLC,IAAKA,EACLC,UAAWA,EACXC,UAAWA,EACXU,QAAST,EACTU,SA1BO,SAACC,GACd3B,EACE4B,YAAmB,CACjB7B,SAAUL,EAAMK,SAChB8B,MAAOvB,EACPwB,MAAOH,EAAEI,OAAOD,UAsBdZ,SAAUA,EACVc,SAAUf,EACVa,MAAOnB,IAETQ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uCAAf,kBC5DFkC,EAAU,SAAC/D,GACf,IAAMC,EAAaC,YACjB,SAACC,GAAD,OAAWA,EAAMC,UAAUA,UAAUJ,EAAMK,YAE7CmC,QAAQC,IAAI,uBAAqBxC,GACjC,IAAMK,EAAWC,cALQC,EAuBrBR,EAAMS,KAdRC,EATuBF,EASvBE,MACAE,EAVuBJ,EAUvBI,UACAC,EAXuBL,EAWvBK,YACAC,EAZuBN,EAYvBM,WACAC,EAbuBP,EAavBO,GACAC,EAduBR,EAcvBQ,YACAC,EAfuBT,EAevBS,aACAC,EAhBuBV,EAgBvBU,IACAC,EAjBuBX,EAiBvBW,IACAC,EAlBuBZ,EAkBvBY,UACAC,EAnBuBb,EAmBvBa,UACAC,EApBuBd,EAoBvBc,QACAC,EArBuBf,EAqBvBe,SACAC,EAtBuBhB,EAsBvBgB,SAGEvB,GAAcA,EAAWW,KAC3BK,EAAehB,EAAWW,IAgB5B,OACEa,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAWhB,GACdY,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cAAcnB,GAC/Be,EAAAC,EAAAC,cAAA,SACEE,UAAWf,EACXH,KAAK,OACLI,GAAIA,EACJe,KAAMlB,EACNI,YAAaA,EAEbE,IAAKA,EACLC,IAAKA,EACLC,UAAWA,EACXC,UAAWA,EACXU,QAAST,EACTU,SA5BO,SAACC,GAGd3B,EACE4B,YAAmB,CACjB7B,SAAUL,EAAMK,SAChB8B,MAAOvB,EACPwB,MAAOH,EAAEI,OAAOD,UAsBdZ,SAAUA,EACVc,SAAUf,EACVa,MAAOnB,IAETQ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uCAAf,kBCbOmC,IA9CK,SAAChE,GACnB,IAAMiE,EAAa,CACjBlE,SAAUA,EACVwC,UAAWA,EACXK,SAAUA,EACVgB,YAAaA,EACbE,QAASA,EACTC,QAASA,GAGX,OACEtC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACZ7B,EAAMkE,cAAcT,IAAI,SAACU,EAAMT,GAC9B,OACEjC,EAAAC,EAAAC,cAAA,OAAKgC,IAAKD,EAAO7B,UAAU,QACzBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAcsC,EAAKC,OACjC3C,EAAAC,EAAAC,cAAA,SAAIwC,EAAKE,YAEX5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,QAGEG,KAAMqC,EAAK9D,SACXwB,UAAWsC,EAAKrD,WAChBwD,YAAU,GAETH,EAAKI,OAAOd,IAAI,SAACe,EAAOd,GACvB,IAAMe,EAAYR,EAAWO,EAAMrC,OACnC,OACEV,EAAAC,EAAAC,cAAC8C,EAAD,CACEd,IAAKD,EACLjD,KAAM+D,EAAMjB,KACZlD,SAAU8D,EAAK9D,gFCmGtB6D,EA9IO,CACpB,CACE7D,SAAU,cACVqE,OAAQ,IACRC,OAAQ,MACR7D,WAAY,wBACZsD,MAAO,uBACPC,UAAW,GACXO,KAAM,kBACNL,OAAQ,CACN,CACEpC,MAAO,WACPoB,KAAM,CACJ7C,MAAO,YACPC,KAAM,SACNC,UAAW,YACXC,YAAa,WACbC,WAAY,eACZC,GAAI,GACJC,YAAa,qCACbC,aAAc,GACdC,IAAK,EACLC,IAAK,WACLC,UAAW,EACXC,UAAW,GAEXE,UAAU,EACVC,UAAU,EACV4C,MAAO,YAGX,CACEjC,MAAO,WACPoB,KAAM,CACJ7C,MAAO,YACPC,KAAM,SACNC,UAAW,WACXC,YAAa,WACbC,WAAY,eACZC,GAAI,GACJC,YAAa,kCACbC,aAAc,GACdC,IAAK,EACLC,IAAK,WACLC,UAAW,EACXC,UAAW,GAEXE,UAAU,EACVC,UAAU,EACV4C,MAAO,aAGX,CACEjC,MAAO,WACPoB,KAAM,CACJ7C,MAAO,eACPC,KAAM,OACNC,UAAW,cACXC,YAAa,WACbC,WAAY,eACZC,GAAI,GACJC,YAAa,+BACbC,aAAc,GACdC,IAAK,EACLC,IAAK,WACLC,UAAW,EACXC,UAAW,GAEXE,UAAU,EACVC,UAAU,EACV4C,MAAO,gBAyDX,CACEjC,MAAO,YACPoB,KAAM,CACJ5C,KAAM,SACNC,UAAW,cACXC,YAAa,iBACbC,WAAY,kBACZC,GAAI,GACJE,aAAc,OACdM,UAAU,eClELsD,UAlEf,WACE,OACEpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aA2DbJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAaZ,cAAeA","file":"static/js/7.21703c12.chunk.js","sourcesContent":["/* \"InputBox\" type support => text, password, hidden, email, number, tel, */\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { incrementByAmounts } from \"../../store/multiFormStore\";\r\n\r\nconst InputBox = (props) => {\r\n  const multiForms = useSelector(\r\n    (state) => state.multiForm.multiForm[props.formName]\r\n  );\r\n  // console.log(\"---multiForms--->\", multiForms);\r\n  const dispatch = useDispatch();\r\n  // const myRef = useRef(\"\");\r\n\r\n  let {\r\n    label,\r\n    type,\r\n    fieldname,\r\n    parentClass,\r\n    classNames,\r\n    id,\r\n    placeholder,\r\n    defaultValue,\r\n    min,\r\n    max,\r\n    minLength,\r\n    maxLength,\r\n    Pattern,\r\n    readonly,\r\n    required,\r\n  } = props.info;\r\n\r\n  if (multiForms && multiForms[fieldname]) {\r\n    defaultValue = multiForms[fieldname];\r\n    // console.log(\"---defaultValue--->\", defaultValue);\r\n  }\r\n\r\n  const handle = (e) => {\r\n    // defaultValue = e.target.value;\r\n    // console.log('---defaultValue--->', defaultValue)\r\n    dispatch(\r\n      incrementByAmounts({\r\n        formName: props.formName,\r\n        field: fieldname,\r\n        value: e.target.value,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={parentClass}>\r\n        <label className=\"form-label\">{label}</label>\r\n        <input\r\n          className={classNames}\r\n          type={type}\r\n          id={id}\r\n          name={fieldname}\r\n          placeholder={placeholder}\r\n          //  ref={myRef}\r\n          min={min}\r\n          max={max}\r\n          minLength={minLength}\r\n          maxLength={maxLength}\r\n          pattern={Pattern}\r\n          onChange={handle}\r\n          required={required}\r\n          disabled={readonly}\r\n          value={defaultValue}\r\n        />\r\n        <div className=\"valid-feedback form-text text-muted\">Looks good!</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { InputBox };\r\n","/* \"ButtonBox\" type support => button, reset, submit */\r\n\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { incrementByAmounts } from \"../../store/multiFormStore\";\r\n\r\nconst ButtonBox = (props) => {\r\n  const multiForms = useSelector(\r\n    (state) => state.multiForm.multiForm[props.formName]\r\n  );\r\n  console.log(\"---multiForms--->\", multiForms);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    type,\r\n    fieldname,\r\n    parentClass,\r\n    classNames,\r\n    id,\r\n    defaultValue,\r\n    readonly,\r\n  } = props.info;\r\n  if (multiForms && multiForms[fieldname]) {\r\n    // defaultValue = multiForms[fieldname];\r\n    console.log(\"---button defaultValue--->\", multiForms[fieldname]);\r\n  }\r\n  const handle = (e) => {\r\n    console.log(\"---button Value--->\", fieldname, e.target.value);\r\n    e.preventDefault()\r\n    dispatch(\r\n      incrementByAmounts({\r\n        formName: props.formName,\r\n        field: fieldname,\r\n        value: e.target.value,\r\n      })\r\n    );\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className={parentClass}>\r\n      <input\r\n        type={type}\r\n        className={classNames}\r\n        id={id}\r\n        name={fieldname}\r\n        value={defaultValue}\r\n        disabled={readonly}\r\n        onClick={handle}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ButtonBox };\r\n","/* \"CheckBox\" type support => checkbox, radio button */\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { incrementByAmounts } from \"../../store/multiFormStore\";\r\n\r\nconst CheckBox = (props) => {\r\n  const multiForms = useSelector(\r\n    (state) => state.multiForm.multiForm[props.formName]\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  let {\r\n    type,\r\n    fieldname,\r\n    parentClass,\r\n    classNames,\r\n    id,\r\n    readonly,\r\n    list,\r\n    defaultValue,\r\n  } = props.info;\r\n  if (multiForms && multiForms[fieldname]) {\r\n    defaultValue = multiForms[fieldname];\r\n    // console.log('checkbox defaultValue', defaultValue)\r\n  }\r\n\r\n  const handle = (e) => {\r\n    if (type === \"checkbox\") {\r\n      let fruits =\r\n        multiForms && multiForms[fieldname] ? multiForms[fieldname] : [];\r\n      if (e.target.checked) {\r\n        fruits = [...fruits, ...[e.target.value]];\r\n      } else {\r\n        fruits = fruits.filter((d) => d !== e.target.value);\r\n      }\r\n\r\n      dispatch(\r\n        incrementByAmounts({\r\n          formName: props.formName,\r\n          field: fieldname,\r\n          value: fruits,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        incrementByAmounts({\r\n          formName: props.formName,\r\n          field: fieldname,\r\n          value: e.target.value,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const isFlag = (data, type, defaultValue) => {\r\n    //    console.log('--->',data, '-->',type, '-->',defaultValue)\r\n    if (type === \"checkbox\") {\r\n      return defaultValue.indexOf(data) >= 0 ? true : false;\r\n    } else {\r\n      return data === defaultValue ? true : false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={parentClass}>\r\n        {list.map((data, index) => {\r\n          return (\r\n            <div key={index} className=\"form-check form-check-inline\">\r\n              <input\r\n                className={classNames}\r\n                type={type}\r\n                id={id}\r\n                name={fieldname}\r\n                onChange={handle}\r\n                disabled={readonly}\r\n                value={data}\r\n                checked={isFlag(data, type, defaultValue)}\r\n              />\r\n              <label className=\"form-check-label\">{data}</label>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { CheckBox };\r\n","/* \"TextareaBox\" type support => textareaBox */\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { incrementByAmounts } from \"../../store/multiFormStore\";\r\n\r\nconst TextareaBox = (props) => {\r\n  const multiForms = useSelector(\r\n    (state) => state.multiForm.multiForm[props.formName]\r\n  );\r\n  const a = useSelector(\r\n    (state) => state.multiForm\r\n  );\r\n  console.log(\"---a--->\", a);\r\n  const dispatch = useDispatch();\r\n  // const myRef = useRef(\"\");\r\n\r\n  let {\r\n    label,\r\n    fieldname,\r\n    parentClass,\r\n    classNames,\r\n    id,\r\n    placeholder,\r\n    defaultValue,\r\n    min,\r\n    max,\r\n    rows,\r\n    minLength,\r\n    maxLength,\r\n    Pattern,\r\n    readonly,\r\n    required,\r\n  } = props.info;\r\n\r\n  if (multiForms && multiForms[fieldname]) {\r\n    defaultValue = multiForms[fieldname];\r\n    // console.log(\"---defaultValue--->\", defaultValue);\r\n  }\r\n\r\n  const handle = (e) => {\r\n    // defaultValue = e.target.value;\r\n    // console.log('---defaultValue--->', defaultValue)\r\n    dispatch(\r\n      incrementByAmounts({\r\n        formName: props.formName,\r\n        field: fieldname,\r\n        value: e.target.value,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={parentClass}>\r\n        <label className=\"form-label\">{label}</label>\r\n        <textarea\r\n          rows={rows}\r\n          className={classNames}\r\n          type=\"text\"\r\n          id={id}\r\n          name={fieldname}\r\n          placeholder={placeholder}\r\n          //  ref={myRef}\r\n          min={min}\r\n          max={max}\r\n          minLength={minLength}\r\n          maxLength={maxLength}\r\n          pattern={Pattern}\r\n          onChange={handle}\r\n          required={required}\r\n          disabled={readonly}\r\n          value={defaultValue}\r\n        ></textarea>\r\n        <div className=\"valid-feedback form-text text-muted\">Looks good!</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { TextareaBox };\r\n","/* \"DateBox\" type support =>  date, datetime-local, month, time, week */\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { incrementByAmounts } from \"../../store/multiFormStore\";\r\n\r\nconst DateBox = (props) => {\r\n  const multiForms = useSelector(\r\n    (state) => state.multiForm.multiForm[props.formName]\r\n  );\r\n  console.log(\"---multiForms--->\", multiForms);\r\n  const dispatch = useDispatch();\r\n\r\n  let {\r\n    label,\r\n    type,\r\n    fieldname,\r\n    parentClass,\r\n    classNames,\r\n    id,\r\n    placeholder,\r\n    defaultValue,\r\n    min,\r\n    max,\r\n    minLength,\r\n    maxLength,\r\n    Pattern,\r\n    readonly,\r\n    required,\r\n  } = props.info;\r\n\r\n  if (multiForms && multiForms[fieldname]) {\r\n    defaultValue = multiForms[fieldname];\r\n    // console.log(\"---defaultValue--->\", defaultValue);\r\n  }\r\n\r\n  const handle = (e) => {\r\n    dispatch(\r\n      incrementByAmounts({\r\n        formName: props.formName,\r\n        field: fieldname,\r\n        value: e.target.value,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={parentClass}>\r\n        <label className=\"form-label\">{label}</label>\r\n        <input\r\n          className={classNames}\r\n          type={type}\r\n          id={id}\r\n          name={fieldname}\r\n          placeholder={placeholder}\r\n          //  ref={myRef}\r\n          min={min}\r\n          max={max}\r\n          minLength={minLength}\r\n          maxLength={maxLength}\r\n          pattern={Pattern}\r\n          onChange={handle}\r\n          required={required}\r\n          disabled={readonly}\r\n          value={defaultValue}\r\n        />\r\n        <div className=\"valid-feedback form-text text-muted\">Looks good!</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { DateBox }\r\n","/* \"FileBox\" type support => file, image */\r\n\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { incrementByAmounts } from \"../../store/multiFormStore\";\r\n\r\nconst FileBox = (props) => {\r\n  const multiForms = useSelector(\r\n    (state) => state.multiForm.multiForm[props.formName]\r\n  );\r\n  console.log(\"---multiForms--->\", multiForms);\r\n  const dispatch = useDispatch();\r\n  // const myRef = useRef(\"\");\r\n\r\n  let {\r\n    label,\r\n    fieldname,\r\n    parentClass,\r\n    classNames,\r\n    id,\r\n    placeholder,\r\n    defaultValue,\r\n    min,\r\n    max,\r\n    minLength,\r\n    maxLength,\r\n    Pattern,\r\n    readonly,\r\n    required,\r\n  } = props.info;\r\n\r\n  if (multiForms && multiForms[fieldname]) {\r\n    defaultValue = multiForms[fieldname];\r\n    // console.log(\"---defaultValue--->\", defaultValue);\r\n  }\r\n\r\n  const handle = (e) => {\r\n    // defaultValue = e.target.value;\r\n    // console.log('---defaultValue--->', defaultValue)\r\n    dispatch(\r\n      incrementByAmounts({\r\n        formName: props.formName,\r\n        field: fieldname,\r\n        value: e.target.value,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={parentClass}>\r\n        <label className=\"form-label\">{label}</label>\r\n        <input\r\n          className={classNames}\r\n          type=\"file\"\r\n          id={id}\r\n          name={fieldname}\r\n          placeholder={placeholder}\r\n          //  ref={myRef}\r\n          min={min}\r\n          max={max}\r\n          minLength={minLength}\r\n          maxLength={maxLength}\r\n          pattern={Pattern}\r\n          onChange={handle}\r\n          required={required}\r\n          disabled={readonly}\r\n          value={defaultValue}\r\n        />\r\n        <div className=\"valid-feedback form-text text-muted\">Looks good!</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { FileBox };\r\n","import React from \"react\";\nimport {\n  InputBox,\n  ButtonBox,\n  CheckBox,\n  TextareaBox,\n  DateBox,\n  FileBox,\n} from \"./index\";\n\nconst DynamicForm = (props) => {\n  const components = {\n    InputBox: InputBox,\n    ButtonBox: ButtonBox,\n    CheckBox: CheckBox,\n    TextareaBox: TextareaBox,\n    DateBox: DateBox,\n    FileBox: FileBox,\n  };\n\n  return (\n    <div className=\"container\">\n      {props.multiFormData.map((item, index) => {\n        return (\n          <div key={index} className=\"card\">\n            <div className=\"card-header\">\n              <h5 className=\"card-title\">{item.title}</h5>\n              <p>{item.subtitile}</p>\n            </div>\n            <div className=\"card-body\">\n              <form\n                // action={item.action}\n                // method={item.method}\n                name={item.formName}\n                className={item.classNames}\n                noValidate\n              >\n                {item.fields.map((items, index) => {\n                  const Component = components[items.field];\n                  return (\n                    <Component\n                      key={index}\n                      info={items.data}\n                      formName={item.formName}\n                    />\n                  );\n                })}\n              </form>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DynamicForm;\n","const multiFormData = [\r\n  {\r\n    formName: \"profileform\",\r\n    action: \"#\",\r\n    method: \"GET\",\r\n    classNames: \"row g-3 was-validated\",\r\n    title: \"Personal Information\",\r\n    subtitile: \"\",\r\n    text: \"Sign up Details\",\r\n    fields: [\r\n      {\r\n        field: \"InputBox\",\r\n        data: {\r\n          label: \"Telephone\",\r\n          type: \"number\",\r\n          fieldname: \"telephone\",\r\n          parentClass: \"col-md-6\",\r\n          classNames: \"form-control\",\r\n          id: \"\",\r\n          placeholder: \"please enter your telephone number\",\r\n          defaultValue: \"\",\r\n          min: 1,\r\n          max: 9999999999,\r\n          minLength: 4,\r\n          maxLength: 30,\r\n          // Pattern: \"\",\r\n          readonly: false,\r\n          required: true,\r\n          title: \"emailid\",\r\n        },\r\n      },\r\n      {\r\n        field: \"InputBox\",\r\n        data: {\r\n          label: \"Mobile No\",\r\n          type: \"number\",\r\n          fieldname: \"mobileno\",\r\n          parentClass: \"col-md-6\",\r\n          classNames: \"form-control\",\r\n          id: \"\",\r\n          placeholder: \"please enter your mobile number\",\r\n          defaultValue: \"\",\r\n          min: 1,\r\n          max: 9999999999,\r\n          minLength: 4,\r\n          maxLength: 30,\r\n          // Pattern: \"\",\r\n          readonly: false,\r\n          required: true,\r\n          title: \"mobileno\",\r\n        },\r\n      },\r\n      {\r\n        field: \"InputBox\",\r\n        data: {\r\n          label: \"Country Name\",\r\n          type: \"text\",\r\n          fieldname: \"countryname\",\r\n          parentClass: \"col-md-6\",\r\n          classNames: \"form-control\",\r\n          id: \"\",\r\n          placeholder: \"please enter your contryname\",\r\n          defaultValue: \"\",\r\n          min: 1,\r\n          max: 9999999999,\r\n          minLength: 4,\r\n          maxLength: 30,\r\n          // Pattern: \"\",\r\n          readonly: false,\r\n          required: true,\r\n          title: \"countryname\",\r\n        },\r\n      },\r\n    /*   {\r\n        field: \"CheckBox\",\r\n        data: {\r\n          label: \"framework list\",\r\n          type: \"checkbox\",\r\n          fieldname: \"frameworks\",\r\n          parentClass: \"col-md-12\",\r\n          classNames: \"form-check-input\",\r\n          id: \"\",\r\n          defaultValue: \"\",\r\n          readonly: false,\r\n          required: true,\r\n          list: [\r\n            \"By signing up, you agree to our Terms, Data Policy and Cookies Policy.\",\r\n          ],\r\n        },\r\n      },\r\n        {\r\n        field: \"CheckBox\",\r\n        data: {\r\n          label: \"Check box list\",\r\n          type: \"radio\",\r\n          fieldname: \"framework\",\r\n          parentClass: \"col-md-6\",\r\n          classNames: \"form-check-input\",\r\n          id: \"\",\r\n          defaultValue: \"\",\r\n          readonly: false,\r\n          required: true,\r\n          list: [\"React\", \"Node\", \"Angular\", \"UI\", \"Responsive\"],\r\n        },\r\n      }, \r\n       {\r\n       field: \"TextareaBox\",\r\n       data: {\r\n         label: \"Description\",\r\n         fieldname: \"description\",\r\n         parentClass: \"col-md-12\",\r\n         classNames: \"form-control\",\r\n         id: \"\",\r\n         placeholder: \"please enter your description\",\r\n         defaultValue: \"\",\r\n         rows: 2,\r\n         min: 4,\r\n         max: 30,\r\n         minLength: 4,\r\n         maxLength: 30,\r\n           Pattern: \"\",\r\n         readonly: false,\r\n         required: true,\r\n         title: \"description\",\r\n       },\r\n     },\r\n     */\r\n      {\r\n        field: \"ButtonBox\",\r\n        data: {\r\n          type: \"button\",\r\n          fieldname: \"buttonLogin\",\r\n          parentClass: \"col-md-12 mt-2\",\r\n          classNames: \"btn btn-primary\",\r\n          id: \"\",\r\n          defaultValue: \"Save\",\r\n          readonly: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\nexport default multiFormData;\r\n","import React from \"react\";\r\nimport multiFormData from \"./profileFormData\";\r\nimport DynamicForm from \"../component/forms/dynamicForm\";\r\n\r\nfunction Profile() {\r\n  return (\r\n    <div className=\"container\">\r\n      {/* <div className=\"position-relative m-4\">\r\n        <div className=\"progress\" style={{ height: \"1px\" }}>\r\n          <div\r\n            className=\"progress-bar\"\r\n            role=\"progressbar\"\r\n            aria-label=\"Progress\"\r\n            style={{ width: \"50%\" }}\r\n            aria-valuenow=\"50\"\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n          ></div>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"position-absolute top-0 start-0 translate-middle btn btn-sm btn-primary rounded-pill\"\r\n        >\r\n          Personal Infomation\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"position-absolute top-0 start-50 translate-middle btn btn-sm btn-primary rounded-pill\"\r\n        >\r\n          Employee Infomation\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"position-absolute top-0 start-100 translate-middle btn btn-sm btn-secondary rounded-pill\"\r\n        >\r\n          School\r\n        </button>\r\n      </div> */}\r\n\r\n      {/* <ul className=\"nav nav-tabs\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n            Active asd\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">\r\n            Link asd\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">\r\n            Link asds\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">\r\n            Link asds\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\">Disabled</a>\r\n        </li>\r\n      </ul> */}\r\n      <DynamicForm multiFormData={multiFormData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}